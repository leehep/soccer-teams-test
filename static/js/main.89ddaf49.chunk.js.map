{"version":3,"sources":["components/DisplayTable.jsx","components/DisplaySocoreTeam.jsx","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","continer","maxWidth","margin","cell","paddingRight","DispalyTable","teamsData","classes","useState","favoritList","setFavoritList","tableData","useEffect","saveFavList","localStorage","getItem","split","columns","title","field","type","tableStateTitle","handleFavorit","e","tempTeamId","target","id","index","findIndex","teamId","splice","setItem","TableTitleRow","TableRow","TableCell","map","key","align","tableBodyData","data","row","onClick","hover","component","scope","padding","toString","style","fill","name","founded","Avatar","alt","src","logo_path","TableContainer","Paper","className","Table","aria-label","size","TableHead","TableBody","theme","load","display","marginLeft","spacing","DisplaySocoreTeam","setTableData","isLoading","setLoading","tempDataArray","axios","get","process","then","res","team","teamTempData","push","console","log","loadingTeams","root","CircularProgress","color","Typography","variant","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ddaf49.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Table,TableBody,TableCell,TableContainer,\r\n  TableHead,TableRow,Paper,Avatar} from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 370,\r\n  },\r\n  continer:{\r\n    maxWidth:600,margin: '15px auto'\r\n  },\r\n  cell:{\r\n    paddingRight:0\r\n  }\r\n});\r\n\r\nexport default function DispalyTable({teamsData}){\r\n  const classes = useStyles();\r\n  const [favoritList,setFavoritList]=useState([]);\r\n  const [tableData]=useState(teamsData);\r\n\r\n  useEffect(()=>{\r\n    const saveFavList = localStorage.getItem('SoccerTeamFav') || '';\r\n    if (saveFavList!==''){\r\n      setFavoritList(saveFavList.split(','))\r\n    }\r\n  },[])\r\n\r\n  const [tableStateTitle]=useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Year', field: 'founded', type: 'numeric' },\r\n      { title: 'Crest',field: 'logo_path',type:'img'}\r\n    ],\r\n  });\r\n  \r\n  const handleFavorit=(e)=>{\r\n    \r\n    const tempTeamId= e.target.id\r\n    const index = favoritList.findIndex(teamId=>teamId===tempTeamId)\r\n\r\n    if(index === -1){\r\n      setFavoritList([...favoritList,tempTeamId])\r\n    }else{\r\n      favoritList.splice(index,1)\r\n      setFavoritList(favoritList=>[...favoritList])\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    localStorage.setItem('SoccerTeamFav',favoritList );\r\n  },[favoritList]);\r\n\r\n  const changeIcon =(id)=>{\r\n    if(favoritList.findIndex(teamId=>teamId===id.toString())===-1){\r\n      return <FavoriteBorderIcon style={{fill:' #762232'}}/>\r\n    }else{\r\n      return<FavoriteIcon style={{fill:' #762232'}}/>\r\n    }\r\n  }\r\n\r\n  \r\n  const TableTitleRow = <TableRow>\r\n    <TableCell></TableCell>\r\n    {tableStateTitle.columns.map((cell,key)=>{\r\n      return<TableCell key={key} align=\"left\">{cell.title}</TableCell> \r\n    })}\r\n  </TableRow>\r\n\r\n  const tableBodyData=tableData?tableData.data.map((row)=>{\r\n   return<TableRow \r\n            key={row.id} \r\n            id={row.id} \r\n            onClick={handleFavorit}\r\n            hover={true}\r\n          >\r\n      <TableCell \r\n        id={row.id}\r\n        component=\"th\" \r\n        scope=\"row\" \r\n        padding=\"checkbox\"\r\n      >\r\n        {changeIcon(row.id)}\r\n      </TableCell>\r\n      <TableCell id={row.id} align=\"left\">{row.name}</TableCell>\r\n      <TableCell id={row.id} align=\"left\">{row.founded}</TableCell>\r\n      <TableCell id={row.id} align=\"justify\" >\r\n        <Avatar alt={row.name} src={row.logo_path} id ={row.id}/>\r\n      </TableCell>\r\n    </TableRow>\r\n  }):''\r\n\r\n  return(\r\n    <TableContainer component={Paper} className={classes.continer}>\r\n      <Table className={classes.table} aria-label=\"team table\" size=\"small\">\r\n        <TableHead>\r\n          {TableTitleRow}\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableBodyData}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Typography} from '@material-ui/core';\r\nimport DispalyTable from './DisplayTable';\r\nimport axios from 'axios';\r\n\r\n\r\nconst api_key=process.env.REACT_APP_API_KEY\r\nconst useStyles = makeStyles((theme) => ({\r\n  load: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DisplaySocoreTeam(){\r\n  const classes = useStyles();\r\n  const [tableData,setTableData]=useState();\r\n  const [isLoading,setLoading]=useState(true)\r\n  \r\n  useEffect(()=>{\r\n    const tempDataArray=[];\r\n\r\n    axios.get(`https://soccer.sportmonks.com/api/v2.0/teams/season/16020?api_token=${api_key}`)\r\n      .then((res)=>{  \r\n        res.data.data.map(team => {\r\n          const teamTempData={ 'name':team.name, \r\n          'founded': team.founded, \r\n          'logo_path':team.logo_path,\r\n          'id':team.id}\r\n          tempDataArray.push(teamTempData)\r\n        }) \r\n      }).then(res =>{\r\n        setTableData({data:tempDataArray})\r\n        setLoading(false)\r\n      })\r\n      \r\n      console.log(\"data live\",tempDataArray)\r\n  },[])\r\n\r\n  \r\n  const loadingTeams = <div className={classes.root}>\r\n    <CircularProgress color=\"secondary\" />\r\n  </div>\r\n\r\n  return(\r\n    <div >\r\n      <Typography variant=\"h3\" >\r\n        Front End Test\r\n      </Typography>\r\n      {isLoading?loadingTeams:<DispalyTable teamsData={tableData} />}\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport DisplaySocoreTeam from './components/DisplaySocoreTeam';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DisplaySocoreTeam/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}